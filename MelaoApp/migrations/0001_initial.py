# Generated by Django 4.2.11 on 2025-07-25 00:40

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(max_length=255)),
                ('profile_picture_url', models.URLField(blank=True, max_length=500, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('self_description', models.TextField(blank=True, null=True)),
                ('favorite_color', models.CharField(blank=True, max_length=50, null=True)),
                ('favorite_book', models.CharField(blank=True, max_length=255, null=True)),
                ('favorite_music', models.CharField(blank=True, max_length=255, null=True)),
                ('favorite_videogame', models.CharField(blank=True, max_length=255, null=True)),
                ('known_programming_languages', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='student_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='student_permissions_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sending_date', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField()),
                ('type', models.CharField(max_length=50)),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MelaoApp.student')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('multimedia_url', models.URLField(blank=True, max_length=500, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('sending_date', models.DateTimeField(auto_now_add=True)),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MelaoApp.chat')),
                ('receiver_username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='MelaoApp.student')),
                ('sender_username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='MelaoApp.student')),
            ],
        ),
        migrations.CreateModel(
            name='IsFriendOf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friends_as_user1', to='MelaoApp.student')),
                ('username_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friends_as_user2', to='MelaoApp.student')),
            ],
            options={
                'verbose_name_plural': 'Friends Relationships',
                'unique_together': {('username_1', 'username_2')},
            },
        ),
        migrations.CreateModel(
            name='Has',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MelaoApp.chat')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MelaoApp.student')),
            ],
            options={
                'verbose_name_plural': 'Has Chat',
                'unique_together': {('username', 'chat')},
            },
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_requests', to='MelaoApp.student')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_requests', to='MelaoApp.student')),
            ],
            options={
                'verbose_name_plural': 'Friend Requests',
                'unique_together': {('sender', 'receiver')},
            },
        ),
    ]
